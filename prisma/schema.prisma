generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Plant {
  id                Int                @id @default(autoincrement())
  createdAt         DateTime           @default(now())
  updatedAt         DateTime
  displayName       String             @unique
  genus             String?
  species           String?
  cultivar          String?
  variety           String?
  size              String?
  description       String?
  currentSize       Int?
  price             Decimal?           @db.Decimal(10, 2)
  salePrice         Decimal?           @db.Decimal(10, 2)
  isPublished       Boolean            @default(true)
  isDiscontinued    Boolean            @default(false)
  qtyAvailable      Int                @default(0)
  qtyAcclimating    Int                @default(0)
  qtyQuarantine     Int                @default(0)
  qtyOrdered        Int                @default(0)
  qtyLost           Int                @default(0)
  qtyOther          Int                @default(0)
  careLight         String?
  careWater         String?
  careHumidity      String?
  careTemperature   String?
  maxSize           Int?
  petFriendly       Boolean            @default(false)
  popularityScore   Int?
  acclimationDate   DateTime?
  acclimationNotes  String?
  featuredImage     String?
  isOnSale          Boolean            @default(false)
  images            String[]
  ProductManagement ProductManagement?

  @@index([isPublished, isDiscontinued])
}

model ProductManagement {
  id            Int        @id @default(autoincrement())
  createdAt     DateTime   @default(now())
  updatedAt     DateTime
  costPrice     Decimal?   @db.Decimal(10, 2)
  reorderPoint  Int        @default(5)
  lastOrderDate DateTime?
  notes         String?
  plantId       Int?       @unique
  soilId        Int?       @unique
  terrariumId   Int?       @unique
  Plant         Plant?     @relation(fields: [plantId], references: [id])
  Soil          Soil?      @relation(fields: [soilId], references: [id])
  Terrarium     Terrarium? @relation(fields: [terrariumId], references: [id])
}

model Sale {
  totalAmount Decimal    @db.Decimal(10, 2)
  notes       String?
  date        DateTime   @default(now())
  createdAt   DateTime   @default(now())
  updatedAt   DateTime
  id          Int        @id @default(autoincrement())
  SaleItem    SaleItem[]

  @@index([date])
}

model SaleItem {
  plantId     Int?
  soilId      Int?
  terrariumId Int?
  quantity    Int
  price       Decimal  @db.Decimal(10, 2)
  cost        Decimal  @db.Decimal(10, 2)
  createdAt   DateTime @default(now())
  updatedAt   DateTime
  id          Int      @id @default(autoincrement())
  saleId      Int
  Sale        Sale     @relation(fields: [saleId], references: [id])

  @@index([plantId])
  @@index([saleId])
  @@index([soilId])
  @@index([terrariumId])
}

model Soil {
  id                Int                @id @default(autoincrement())
  createdAt         DateTime           @default(now())
  updatedAt         DateTime
  description       String
  price             Decimal            @db.Decimal(10, 2)
  salePrice         Decimal?           @db.Decimal(10, 2)
  stock             Int                @default(0)
  isPublished       Boolean            @default(false)
  weight            Decimal            @db.Decimal(10, 2)
  composition       String[]
  ph                Decimal?           @db.Decimal(3, 1)
  organicMatter     Boolean            @default(false)
  drainageRating    String
  nutrients         String[]
  featuredImage     String?
  images            String[]
  displayName       String
  ProductManagement ProductManagement?

  @@index([isPublished])
}

model Terrarium {
  id                Int                @id @default(autoincrement())
  createdAt         DateTime           @default(now())
  updatedAt         DateTime
  description       String
  price             Decimal            @db.Decimal(10, 2)
  salePrice         Decimal?           @db.Decimal(10, 2)
  stock             Int                @default(0)
  isPublished       Boolean            @default(false)
  dimensions        Json
  glassThickness    Decimal            @db.Decimal(3, 1)
  material          String
  style             String
  features          String[]
  includedItems     String[]
  customizable      Boolean            @default(false)
  featuredImage     String?
  images            String[]
  displayName       String
  ProductManagement ProductManagement?

  @@index([isPublished])
}
